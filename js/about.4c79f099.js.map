{"version":3,"file":"js/about.4c79f099.js","mappings":"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","sources":["webpack://sus_front_recepcao/./node_modules/core-js/internals/regexp-flags.js","webpack://sus_front_recepcao/./node_modules/core-js/modules/es.regexp.flags.js","webpack://sus_front_recepcao/./src/views/TriagemView.vue","webpack://sus_front_recepcao/./node_modules/engine.io-parser/build/esm/commons.js","webpack://sus_front_recepcao/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://sus_front_recepcao/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://sus_front_recepcao/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://sus_front_recepcao/./node_modules/engine.io-parser/build/esm/index.js","webpack://sus_front_recepcao/./node_modules/@socket.io/component-emitter/index.mjs","webpack://sus_front_recepcao/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://sus_front_recepcao/./node_modules/engine.io-client/build/esm/util.js","webpack://sus_front_recepcao/./node_modules/engine.io-client/build/esm/transport.js","webpack://sus_front_recepcao/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://sus_front_recepcao/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://sus_front_recepcao/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://sus_front_recepcao/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://sus_front_recepcao/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://sus_front_recepcao/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://sus_front_recepcao/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://sus_front_recepcao/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://sus_front_recepcao/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://sus_front_recepcao/./node_modules/engine.io-client/build/esm/socket.js","webpack://sus_front_recepcao/./node_modules/engine.io-client/build/esm/index.js","webpack://sus_front_recepcao/./node_modules/socket.io-client/build/esm/url.js","webpack://sus_front_recepcao/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://sus_front_recepcao/./node_modules/socket.io-parser/build/esm/binary.js","webpack://sus_front_recepcao/./node_modules/socket.io-parser/build/esm/index.js","webpack://sus_front_recepcao/./node_modules/socket.io-client/build/esm/on.js","webpack://sus_front_recepcao/./node_modules/socket.io-client/build/esm/socket.js","webpack://sus_front_recepcao/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://sus_front_recepcao/./node_modules/socket.io-client/build/esm/manager.js","webpack://sus_front_recepcao/./node_modules/socket.io-client/build/esm/index.js","webpack://sus_front_recepcao/./src/views/TriagemView.vue?7b5d"],"sourcesContent":["'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\nvar RegExp = global.RegExp;\nvar RegExpPrototype = RegExp.prototype;\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  var INDICES_SUPPORT = true;\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {};\n  // modern V8 bug\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, { get: function () {\n      calls += chr;\n      return true;\n    } });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]);\n\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var result = Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call(O);\n\n  return result !== expected || calls !== expected;\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) defineBuiltInAccessor(RegExpPrototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n","<template>\r\n  <main class=\"triagemContainer\">\r\n    <aside class=\"fila\">\r\n      <div class=\"listaTriagem\" v-for=\"(item, index) in lTriagem\" :key=\"index\" @click=\"carregaTriagem(item)\">\r\n        <div class=\"ltCliente\">\r\n          <div class=\"cNome\">\r\n            <div class=\"cID\">\r\n              ID: <label class=\"dataLabel\">{{ item.idcliente }}</label>\r\n            </div>\r\n            <div class=\"cNome2\">\r\n              Nome: <label class=\"dataLabel\">{{ item.nome }}</label>\r\n            </div>\r\n          </div>\r\n          <div class=\"cDocs\">\r\n            <div class=\"cDoc\">\r\n              CPF: <label class=\"dataLabel\">{{ item.doc }}</label>\r\n            </div>\r\n            <div class=\"cDoc\">\r\n              Nº SUS: <label class=\"dataLabel\">{{ item.docsus }}</label>\r\n            </div>\r\n          </div>\r\n          <div class=\"cContato\">\r\n            <div class=\"cDoc\">\r\n              Telefone: <label class=\"dataLabel\">{{ item.telefone }}</label>\r\n            </div>\r\n            <div class=\"cDoc\">\r\n              E-Mail: <label class=\"dataLabel\">{{ item.email }}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"ltMotivo\">\r\n          <div class=\"cMotivo\">\r\n            <div class=\"cDoc\">\r\n              Tipo de atendimento: <label class=\"dataLabel\">{{ item.idespec }}</label>\r\n            </div>\r\n            <div class=\"cDoc\">\r\n              Tipo de especialidade: <label class=\"dataLabel\">{{ item.idsubspec }}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"ltSenha\">\r\n          <div :class=\"[\r\n            'cSenha',\r\n            {\r\n              csPriority1: item.codurg === 1,\r\n              csPriority2: item.codurg === 2,\r\n              csPriority3: item.codurg === 3,\r\n            },\r\n          ]\">\r\n            <div class=\"sPrefix\">\r\n              {{ item.espec_prefix }}\r\n            </div>\r\n            <div class=\"sNumber\">\r\n              {{ String(item.idtriagem).padStart(3, \"0\") }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </aside>\r\n    <div class=\"panelControl\">\r\n      <div v-if=\"triagemSelecionada\" class=\"pcTop\">\r\n        <div class=\"listaTriagem ltSelecionada\">\r\n          <div class=\"ltCliente\">\r\n            <div class=\"cNome\">\r\n              <div class=\"cID\">\r\n                ID: <label class=\"dataLabel\">{{ triagemSelecionada.idcliente }}</label>\r\n              </div>\r\n              <div class=\"cNome2\">\r\n                Nome: <label class=\"dataLabel\">{{ triagemSelecionada.nome }}</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"cDocs\">\r\n              <div class=\"cDoc\">\r\n                CPF: <label class=\"dataLabel\">{{ triagemSelecionada.doc }}</label>\r\n              </div>\r\n              <div class=\"cDoc\">\r\n                Nº SUS: <label class=\"dataLabel\">{{ triagemSelecionada.docsus }}</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"cContato\">\r\n              <div class=\"cDoc\">\r\n                Telefone:\r\n                <label class=\"dataLabel\">{{ triagemSelecionada.telefone }}</label>\r\n              </div>\r\n              <div class=\"cDoc\">\r\n                E-Mail: <label class=\"dataLabel\">{{ triagemSelecionada.email }}</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"ltMotivo\">\r\n            <div class=\"cMotivo\">\r\n              <div class=\"cDoc\">\r\n                Tipo de atendimento:\r\n                <label class=\"dataLabel\">{{ triagemSelecionada.idespec }}</label>\r\n              </div>\r\n              <div class=\"cDoc\">\r\n                Tipo de especialidade:\r\n                <label class=\"dataLabel\">{{ triagemSelecionada.idsubspec }}</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"ltSenha ltSenhaSelect\">\r\n            <div :class=\"[\r\n              'cSenha',\r\n              'cSenhaSelect',\r\n              {\r\n                csPriority1: triagemSelecionada.codurg === 1,\r\n                csPriority2: triagemSelecionada.codurg === 2,\r\n                csPriority3: triagemSelecionada.codurg === 3,\r\n              },\r\n            ]\">\r\n              <div class=\"sPrefix\">\r\n                {{ triagemSelecionada.espec_prefix }}\r\n              </div>\r\n              <div class=\"sNumber\">\r\n                {{ String(triagemSelecionada.idtriagem).padStart(3, \"0\") }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"pcTopMenu\">\r\n          <div class=\"priorityChange\">\r\n            <div>Prioridade:</div>\r\n            <select class=\"pSelect\" v-model=\"selectedPriority\" @click=\"sOpcao(selectedPriority)\">\r\n              <option class=\"pSelectOption\" value=\"\" disabled selected>\r\n                Selecione uma prioridade\r\n              </option>\r\n              <option class=\"pSelectOption\" v-for=\"priority in priority\" :value=\"priority.p\" :key=\"priority.p\">\r\n                {{ priority.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"salvaTriagem\" @click=\"salvaTriagem()\">Salvar</div>\r\n          <div class=\"chamaTriagem\" @click=\"chamaTriagem()\">Chamar</div>\r\n          <div class=\"cancelaTriagem\" @click=\"cancelaTriagem(triagemSelecionada)\">Cancelar</div>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"triagemChamada\" class=\"pcWherever\" @click=\"RechamaTriagem()\">\r\n        <div class=\"ltSenha ltSenhaSelect\">\r\n          <div :class=\"[\r\n            'cSenha',\r\n            'cSenhaSelect',\r\n            {\r\n              csPriority1: triagemChamada.codurg === 1,\r\n              csPriority2: triagemChamada.codurg === 2,\r\n              csPriority3: triagemChamada.codurg === 3,\r\n            },\r\n          ]\"></div>\r\n        </div>\r\n\r\n        <div class=\"csChamada\">\r\n          <div class=\"sChamada\">\r\n            <div class=\"sPrefix\">\r\n              {{ triagemChamada.espec_prefix }}\r\n            </div>\r\n            <div class=\"csNumber\">\r\n              {{ String(triagemChamada.idtriagem).padStart(3, \"0\") }}\r\n            </div>\r\n          </div>\r\n          <div class=\"mensagemChamada\">Por favor, dirija-se ao balcão {{ bLivre }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nimport { io } from \"socket.io-client\";\r\n\r\n// const socket = io(\"http://localhost:3000\");\r\nconst socket = io(\"https://vizinhoapi.herokuapp.com/\");\r\n\r\nconst http = axios.create();\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      BASE_URL: null,\r\n      lTriagem: null,\r\n      triagemSelecionada: null,\r\n      priority: [\r\n        { p: 1, name: \"Urgência\" },\r\n        { p: 2, name: \"Intermediário\" },\r\n        { p: 3, name: \"Não urgente\" },\r\n      ],\r\n      selectedPriority: null,\r\n      bLivre: null,\r\n      triagemChamada: null,\r\n      messageContainer: null,\r\n      ioclient: socket,\r\n      returnServerMsg: [],\r\n    };\r\n  },\r\n  mounted() {\r\n\r\n    this.BASE_URL = \"https://vizinhoapi.herokuapp.com/\"\r\n    // this.BASE_URL = \"http://localhost:3000/\";\r\n    this.getTriagem();\r\n\r\n    this.messageContainer = this.$refs.messageContainer;\r\n    this.socketConnection();\r\n    this.waitConnected();\r\n    this.waitChamada();\r\n    this.waitClientJoin();\r\n  },\r\n  methods: {\r\n    RandomNumber() {\r\n      return Math.floor(Math.random() * 10) + 1;\r\n    },\r\n    async cancelaTriagem(Value) {\r\n\r\n      var idtriagem = Value.idtriagem;\r\n\r\n      try {\r\n\r\n        const response = await http.patch(this.BASE_URL + \"triagem/delete\", {\r\n          triagem_id: idtriagem\r\n        });\r\n\r\n        this.cancelaTriagemCliente()\r\n\r\n        this.$router.go(0);\r\n\r\n      } catch (error) {\r\n        // console.log({ error });\r\n      }\r\n    },\r\n    cancelaTriagemCliente() {\r\n      \r\n      this.triagemChamada = this.triagemSelecionada;\r\n\r\n      let id = this.triagemChamada.idcliente\r\n\r\n      this.ioclient.emit(\"send_ClientCancel\", id);\r\n\r\n    },\r\n    chamaTriagem() {\r\n\r\n      let balcao = this.RandomNumber();\r\n      this.triagemChamada = this.triagemSelecionada;\r\n      this.bLivre = balcao;\r\n\r\n      var triagemSenha = `${this.triagemChamada.espec_prefix}${String(this.triagemChamada.idtriagem).padStart(3, \"0\")}`\r\n\r\n      this.sendAlertaCliente(this.triagemChamada.idcliente, balcao)\r\n\r\n      if (Notification.permission === \"granted\") {\r\n        const notification = new Notification(\"SUS Notifications\", {\r\n          body: `${triagemSenha} Sua vez chegou, por favor, dirija-se ao balcão ${this.bLivre}`,\r\n          // Outras opções de configuração da notificação\r\n        });\r\n      }\r\n\r\n    },    \r\n    RechamaTriagem() {\r\n\r\n      let balcao = this.RandomNumber();\r\n      this.bLivre = balcao;\r\n\r\n      var triagemSenha = `${this.triagemChamada.espec_prefix}${String(this.triagemChamada.idtriagem).padStart(3, \"0\")}`\r\n\r\n      this.sendAlertaCliente(this.triagemChamada.idcliente, balcao)\r\n\r\n      if (Notification.permission === \"granted\") {\r\n        const notification = new Notification(\"SUS Notifications\", {\r\n          body: `${triagemSenha} Sua vez chegou, por favor, dirija-se ao balcão ${this.bLivre}`,\r\n          // Outras opções de configuração da notificação\r\n        });\r\n      }\r\n\r\n    },\r\n    async salvaTriagem() {\r\n      // console.log(this.triagemSelecionada);\r\n\r\n      try {\r\n        const response = await http.patch(this.BASE_URL + \"triagem\", {\r\n          triagem_id: this.triagemSelecionada.idtriagem,\r\n          urgencia: this.triagemSelecionada.codurg,\r\n        });\r\n\r\n        this.$router.go(0);\r\n      } catch (error) {\r\n        // console.log({ error });\r\n      }\r\n    },\r\n    sOpcao(Value) {\r\n      if (Value) {\r\n        this.triagemSelecionada.codurg = Value;\r\n      }\r\n    },\r\n    carregaTriagem(Value) {\r\n      // console.log(Value);\r\n      this.triagemSelecionada = Value;\r\n      this.selectedPriority = this.triagemSelecionada.codurg;\r\n    },\r\n    async getTriagem() {\r\n      try {\r\n        const response = await http.post(this.BASE_URL + \"triagem\", {});\r\n\r\n        const rTriagem = response.data.response.triagem;\r\n\r\n        this.lTriagem = rTriagem;\r\n      } catch (error) {\r\n        // console.log({ error });\r\n      }\r\n    },\r\n    waitChamada() {\r\n      this.ioclient.on(\"send_ClientAlert\", (mensagem) => {\r\n        // console.log({ ServidorMandou: mensagem })\r\n      });\r\n    },\r\n    waitConnected() {\r\n      this.ioclient.on(\"connected\", (mensagem) => {\r\n        this.returnServerMsg.push(mensagem);\r\n        this.getRooms();\r\n        this.getClients();\r\n        this.sendJoin(1, \"Sala de Espera\");        \r\n      });\r\n    },\r\n    waitClientJoin() {\r\n      this.ioclient.on(\"ClientJoin\", (mensagem) => {\r\n        // console.log({mensagem})\r\n        this.$router.go(0)       \r\n      });\r\n    },\r\n    getClients() {\r\n      // socket.emit('get_clients');\r\n\r\n      this.ioclient.on(\"clients_list\", (clients) => {\r\n        // console.log(\"Connected clients:\", clients);\r\n        this.pacientes = clients\r\n      });\r\n    },\r\n    getRooms() {\r\n\r\n      this.ioclient.on(\"rooms_list\", (list) => {\r\n        // console.log(\"Rooms:\", list);\r\n        this.salas = list\r\n      });\r\n\r\n    },\r\n    rolarScroll() {\r\n      // setTimeout(() => {\r\n      //   const messageContainer = this.$refs.messageContainer;\r\n      //   messageContainer.scrollTop = messageContainer.scrollHeight;\r\n      // }, 0);\r\n    },\r\n    socketConnection() {\r\n      this.ioclient.on(\"send_message\", (mensagem) => {\r\n        this.returnServerMsg.push(mensagem);\r\n        // this.rolarScroll();\r\n      });\r\n    },\r\n    sendJoin(userId, room) {\r\n      // Evento para se juntar a uma sala\r\n      this.ioclient.emit(\"join\", { userId, room });\r\n    },\r\n    sendText() {\r\n      this.ioclient.emit(\"send_message\", { name: \"usuário\", message: this.messageText });\r\n      this.messageText = null;\r\n    },\r\n    sendHello() {\r\n      this.ioclient.emit(\"send_message\", { name: \"usuário\", message: \"Olá, servidor!\" });\r\n      this.ioclient.emit(\"send_message\", { name: \"usuário\", message: \"Olá, sala!\" });\r\n    },\r\n    sendAlertaCliente(id, balcao) {\r\n      this.ioclient.emit(\"send_ClientAlert\", { id, balcao });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.triagemContainer {\r\n  background-color: rgb(193, 209, 255);\r\n  height: calc(100% - 24px);\r\n  display: flex;\r\n  padding: 12px;\r\n}\r\n\r\n.fila {\r\n  /* background-color: brown; */\r\n  width: 360px;\r\n  min-width: 360px;\r\n  height: 100%;\r\n  margin-right: 16px;\r\n  border-radius: 8px;\r\n  overflow: auto;\r\n}\r\n\r\n.panelControl {\r\n  background-color: rgba(240, 248, 255, 0.575);\r\n  height: calc(100% - 12px);\r\n  width: 100%;\r\n  border-radius: 8px;\r\n  padding: 6px;\r\n  box-shadow: 1px 1px 1px rgb(51, 51, 51);\r\n}\r\n\r\n.pcTop {\r\n  background-color: aliceblue;\r\n  width: 100%;\r\n  min-height: 135px;\r\n  margin-bottom: 4px;\r\n  border-radius: 6px;\r\n  box-shadow: 1px 1px 1px rgb(51, 51, 51);\r\n}\r\n\r\n.pcWherever {\r\n  background-color: aliceblue;\r\n  width: 100%;\r\n  height: calc(55% - 4px);\r\n  max-height: calc(55% - 4px);\r\n  border-radius: 6px;\r\n  box-shadow: 1px 1px 1px rgb(51, 51, 51);\r\n  cursor: pointer;\r\n}\r\n\r\n.listaTriagem {\r\n  background-color: aliceblue;\r\n  width: calc(100% - 16px);\r\n  min-height: 90px;\r\n  margin-bottom: 8px;\r\n  padding: 6px;\r\n  border-radius: 8px;\r\n  font-size: 12px;\r\n  font-weight: 700;\r\n  color: rgb(73, 73, 73);\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n  box-shadow: 1px 1px 1px rgb(51, 51, 51);\r\n}\r\n\r\n.listaTriagem:hover {\r\n  background-color: rgb(177, 218, 255);\r\n}\r\n\r\n.cNome,\r\n.cDocs,\r\n.cContato,\r\n.cMotivo {\r\n  text-align: left;\r\n}\r\n\r\n.cNome,\r\n.cDocs,\r\n.cContato,\r\n.cMotivo {\r\n  font-size: 0.8rem;\r\n}\r\n\r\n.cDoc,\r\n.cID {\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.cNome,\r\n.cSenha,\r\n.cDocs,\r\n.cContato {\r\n  display: flex;\r\n}\r\n\r\n.cSenha {\r\n  height: 30px;\r\n  border-radius: 3px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.csPriority3 {\r\n  background-color: rgb(140, 129, 201);\r\n}\r\n\r\n.csPriority2 {\r\n  background-color: rgb(201, 187, 0);\r\n}\r\n\r\n.csPriority1 {\r\n  background-color: rgb(42, 131, 1);\r\n}\r\n\r\n.sPrefix {\r\n  color: rgb(39, 39, 156);\r\n}\r\n\r\n.sNumber {\r\n  color: aliceblue;\r\n}\r\n\r\n.ltSenha {\r\n  margin-top: 12px;\r\n  margin-bottom: 3px;\r\n}\r\n\r\n.dataLabel {\r\n  color: rgb(0, 0, 41);\r\n  margin-right: 10px;\r\n}\r\n\r\n.ltSelecionada {\r\n  background-color: aliceblue;\r\n  margin: 0;\r\n  box-shadow: none;\r\n  width: calc(100% - 12px);\r\n  height: calc(100% - 12px);\r\n  cursor: default;\r\n  min-height: 0;\r\n}\r\n\r\n.ltSelecionada:hover {\r\n  background-color: aliceblue;\r\n}\r\n\r\n.cSenhaSelect {\r\n  height: 100%;\r\n}\r\n\r\n.ltSenhaSelect {\r\n  height: 40px;\r\n}\r\n\r\n.pcTopMenu {\r\n  height: 60px;\r\n  padding: 6px;\r\n  display: flex;\r\n}\r\n\r\n.pSelect {\r\n  text-align: center;\r\n  cursor: pointer;\r\n  height: 30px;\r\n  width: 100%;\r\n  border-radius: 4px;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n}\r\n\r\n.pSelectOption {\r\n  text-align: center;\r\n  /* Alinhar o texto das opções à esquerda */\r\n  margin: 0 auto;\r\n  /* Centralizar as opções dentro do select box */\r\n  cursor: pointer;\r\n  height: 30px;\r\n  font-size: 16px;\r\n}\r\n\r\n.priorityChange {\r\n  width: 200px;\r\n  text-align: left;\r\n  margin-right: 16px;\r\n}\r\n\r\n.priorityChange div {\r\n  margin-bottom: 4px;\r\n  color: rgb(0, 0, 41);\r\n  font-weight: 600;\r\n}\r\n\r\n.salvaTriagem,\r\n.cancelaTriagem,\r\n.chamaTriagem {\r\n  background-color: rgb(13, 6, 54);\r\n  width: 200px;\r\n  margin-top: 24px;\r\n  margin-bottom: 5px;\r\n  color: aliceblue;\r\n  font-weight: 600;\r\n  border-radius: 6px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 1px 1px 1px rgb(51, 51, 51);\r\n  cursor: pointer;\r\n  transition: 0.1s;\r\n  margin-right: 16px;\r\n}\r\n\r\n.salvaTriagem:hover,\r\n.cancelaTriagem:hover,\r\n.chamaTriagem:hover {\r\n  background-color: rgb(218, 213, 247);\r\n  color: rgb(5, 0, 34);\r\n}\r\n\r\n.sChamada,\r\n.csChamada {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 8rem;\r\n  font-weight: 800;\r\n}\r\n\r\n.csChamada {\r\n  flex-direction: column;\r\n  height: 100%;\r\n}\r\n\r\n.csNumber {\r\n  color: rgb(87, 87, 87);\r\n}\r\n\r\n.mensagemChamada {\r\n  color: rgb(0, 0, 34);\r\n  font-size: 3rem;\r\n}\r\n</style>\r\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"string\" || typeof payload[0] === \"number\"));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { render } from \"./TriagemView.vue?vue&type=template&id=60e39790&scoped=true\"\nimport script from \"./TriagemView.vue?vue&type=script&lang=js\"\nexport * from \"./TriagemView.vue?vue&type=script&lang=js\"\n\nimport \"./TriagemView.vue?vue&type=style&index=0&id=60e39790&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\Pedro\\\\Projetos\\\\SUS\\\\sus_front_recepcao\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-60e39790\"]])\n\nexport default __exports__"],"names":["anObject","module","exports","that","this","result","hasIndices","global","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky","DESCRIPTORS","defineBuiltInAccessor","regExpFlags","fails","RegExp","RegExpPrototype","prototype","FORCED","INDICES_SUPPORT","error","O","calls","expected","addGetter","key","chr","Object","defineProperty","get","pairs","getOwnPropertyDescriptor","call","configurable","class","_createElementVNode","value","disabled","selected","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$data","lTriagem","item","index","onClick","$event","$options","carregaTriagem","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","idcliente","_hoisted_8","_hoisted_9","nome","_hoisted_10","_hoisted_11","_hoisted_12","doc","_hoisted_13","_hoisted_14","docsus","_hoisted_15","_hoisted_16","_hoisted_17","telefone","_hoisted_18","_hoisted_19","email","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","idespec","_hoisted_24","_hoisted_25","idsubspec","_hoisted_26","_normalizeClass","codurg","_hoisted_27","espec_prefix","_hoisted_28","String","idtriagem","padStart","_hoisted_29","triagemSelecionada","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","selectedPriority","_cache","sOpcao","_hoisted_60","priority","p","name","_hoisted_61","salvaTriagem","chamaTriagem","cancelaTriagem","triagemChamada","RechamaTriagem","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","bLivre","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","split","readAsDataURL","chars","lookup","Uint8Array","i","length","charCodeAt","decode","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","fromCharCode","encodePayload","packets","encodedPackets","Array","count","packet","join","decodePayload","encodedPayload","decodedPacket","push","protocol","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","BASE64_OVERHEAD","byteLength","utf8Length","Math","ceil","size","str","c","l","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","pause","onPause","alphabet","map","prev","seed","encode","num","encoded","floor","yeast","now","Date","encodeURIComponent","qs","qry","pair","decodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","empty","hasXHR2","xhr","responseType","Polling","polling","location","isSSL","port","xd","hostname","xs","secure","forceBase64","poll","total","doPoll","doWrite","uri","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","ipv6","indexOf","path","request","assign","Request","req","method","xhrStatus","pollXhr","async","undefined","xscheme","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","document","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","then","WebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","options","compress","perMessageDeflate","Buffer","threshold","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","shouldCheckPayloadSize","payloadSize","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","url","loc","test","href","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","isIndexValid","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","_a","ackTimeout","timer","emitWithAck","withErr","reject","arg1","arg2","tryCount","pending","responseArgs","hasError","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","sameNamespace","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","clearTimeout","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex","http","axios","BASE_URL","messageContainer","ioclient","returnServerMsg","mounted","getTriagem","$refs","socketConnection","waitConnected","waitChamada","waitClientJoin","methods","RandomNumber","Value","patch","triagem_id","cancelaTriagemCliente","$router","go","balcao","triagemSenha","sendAlertaCliente","Notification","permission","body","urgencia","response","post","rTriagem","triagem","mensagem","getRooms","getClients","sendJoin","clients","pacientes","list","salas","rolarScroll","userId","room","sendText","messageText","sendHello","__exports__","render"],"sourceRoot":""}